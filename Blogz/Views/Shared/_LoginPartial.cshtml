@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul>

    @if (SignInManager.IsSignedIn(User))
    {
        <li class="dropdown">
            <a href="#"><span>@User.Identity?.Name</span> <i class="bi bi-chevron-down toggle-dropdown"></i></a>
            <ul>
                <li>
                    <a class="nav-link @((ViewContext.RouteData.Values["Page"] as string == "/Account/Manage/Index") ? "active" : "")" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Profile</a>
                </li>
                <li>
                    <form class="nav-link form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-page-handler="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button type="submit" class="nav-link btn btn-link">Logout</button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link @((ViewContext.RouteData.Values["Page"] as string == "/Account/Register") ? "active" : "")" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link @((ViewContext.RouteData.Values["Page"] as string == "/Account/Login") ? "active" : "")" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
