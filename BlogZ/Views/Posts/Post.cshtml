@model PostViewModel

@{
    ViewData["Title"] = Model.Post?.Title ?? "Post";
}

<partial name="_BlogHeaderPartial" model="Model.Blog" />

<div class="container px-4 px-lg-5">
    <div class="row gx-4 gx-lg-5 justify-content-center">
        <div class="col-md-10 col-lg-8 col-xl-7">
            <!-- Post content -->
            <article class="w-100 d-flex flex-column gap-2">
                <h1 class="post-title">@Model?.Post?.Title</h1>

                <!-- Display Post Public Status and Delete Icon -->
                <div class="d-flex justify-content-between align-items-center mb-3">
                    @if (User.Identity.IsAuthenticated &&
                    (User.Identity.Name == Model.Author.User.UserName ||
                    User.IsInRole("Moderator") ||
                    User.IsInRole("Admin")))
                    {
                        <div class="d-flex align-items-center gap-2">
                            <span class="badge @(Model.Post.IsPublic ? "bg-success" : "bg-secondary")">
                                @(Model.Post.IsPublic ? "Public" : "Private")
                            </span>
                            <!-- Delete Icon -->
                            <a href="#" class="text-danger" onclick="deletePost('@Model.Post.Slug')">
                                <i class="bi bi-trash"></i> <!-- Assuming Bootstrap Icons for delete icon -->
                            </a>
                        </div>
                    }
                </div>

                <p class="post-meta">
                    Posted by
                    <a href="@Url.Action("Blog", "Blogs", new { username = Model?.Author?.User?.UserName })">@Model?.Author?.User?.UserName</a>
                    on @Model?.Post?.CreatedDate.ToString("MMMM dd, yyyy")
                </p>
                @if (User.Identity.IsAuthenticated && User.Identity.Name == Model.Author.User.UserName)
                {
                    @if (User.Identity.IsAuthenticated &&
                   (User.Identity.Name == Model.Author.User.UserName ||
                   User.IsInRole("Moderator") ||
                   User.IsInRole("Admin")))
                    {
                        <div class="d-flex justify-content-start align-items-center gap-2">
                            <a href="@Url.Action("Edit", "Posts", new { username = Model.Author.User.UserName, slug = Model.Post.Slug })" class="ml-auto">Edit Post</a>
                        </div>
                    }

                }
                <!-- Divider -->
                <hr class="my-4" />
                <div>
                    @Html.Raw(Model?.Post?.Content)
                </div>
            </article>
            <!-- Divider -->
            <hr class="my-4" />
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/@@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script>
        function deletePost(slug) {
            if (confirm('Are you sure you want to delete this post?')) {
                fetch(`/posts/delete/${slug}`, {
                    method: 'DELETE',
                    headers: {
                        'X-Request-Width': 'XMLHttpRequest',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                }).then(response => {
                    if (response.redirected) {
                        window.location.href = response.url; // Redirect to the URL provided in the response
                    } else {
                        alert('Failed to delete the post.');
                    }
                });
            }
        }

    </script>
}
