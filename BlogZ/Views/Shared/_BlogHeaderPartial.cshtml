@model BlogViewModel

<div class="card border-0 mb-5">
    <div class="card-body d-flex flex-column gap-4 border-0">
        <div class="d-flex justify-content-between">
            <div class="d-flex align-items-center justify-content-flex-start gap-3">
                <img src="https://picsum.photos/100/100" width="64px" height="64px" alt="@Model.Author.User.UserName's profile picture" class="rounded-circle">
                <h2 class="username fs-3">
                    <a class="nav-link @((ViewContext.RouteData.Values["Page"] as string == $"/blogs/{User.Identity?.Name}") ? "active" : "")"
                       href="@Url.Content($"/blogs/{Model.Author.User.UserName}")"
                       title="My Blog">@Model.Author.User.UserName</a>
                </h2>
            </div>
            <div class="d-flex align-items-center gap-3">
                <a href="#" class="text-body">
                    <i class="bi bi-github"></i>
                </a>
                <a href="#" class="text-body-secondary">
                    <i class="bi bi-twitter-x"></i>
                </a>
            </div>
        </div>
        <div class="d-flex justify-content-between">
            <div>
                <em class="">@Model.Author.Biography</em>
                @if (User.Identity.IsAuthenticated && User.Identity.Name == Model.Author.User.UserName)
                {
                    <i class="bi bi-pencil-square" style="cursor: pointer;" onclick="showBiographyEditor()"></i>
                  @*   <div id="biography-editor" class="biography-editor" style="display: none;">
                        <form asp-controller="Blogs" asp-action="UpdateBiography" asp-route-username="@Model.Author.User.UserName" method="post">
                            <textarea asp-for="NewBiography" class="form-control" rows="3"></textarea>
                            <input type="hidden" asp-for="Author.Id" />
                            <button type="submit" class="btn btn-new-post mt-2">Save</button>
                        </form>
                    </div> *@
                    @await Component.InvokeAsync("UpdateAuthorBiography", new { author = Model.Author })
                }
            </div>
            @if (User.Identity.IsAuthenticated && User.Identity.Name == Model.Author.User.UserName)
            {
                <div class="mt-3">
                    <a href="@Url.Content($"/posts/{Model.Author.User.UserName}/create")" class="btn btn-new-post">New Post</a>
                </div>
            }
        </div>
    </div>
</div>
